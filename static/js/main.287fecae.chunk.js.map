{"version":3,"sources":["styles/TabFilter.module.css","serviceWorker.js","hooks/useDraftPicks.js","util/index.js","components/LeagueTab.js","components/TeamTab.js","components/TabFilters.js","components/TabFilter.js","components/LeagueFilters.js","components/TeamFilters.js","components/SearchFilters.js","components/MainPage.js","components/App.js","index.js","styles/MainPage.module.css"],"names":["module","exports","tabFilter","active","list","Boolean","window","location","hostname","match","useDraftPicks","year","_useState","useState","_useState2","Object","slicedToArray","draftPicks","setDraftPicks","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_draftPicks","result","wrap","_context","prev","next","localforage","getItem","sent","axios","get","concat","data","t0","console","log","stop","apply","this","arguments","fetchDraftPicks","toOrdinal","n","s","v","LeagueTab","byRound","_groupBy","listGroups","_map","players","key","round","react_default","createElement","framework7_react_esm","mediaList","title","groupTitle","map","player","i","name","subtitle","position","teams","team","school","slot","pick","teamId","teamDraftPicks","filter","TabFilters","children","Fragment","isActive","className","cn","styles","defineProperty","LeagueFilters","setYear","yearOptions","inlineLabels","tabFilterStyles","label","type","defaultValue","placeholder","onInput","e","newYear","target","value","TeamFilters","setTeamId","yearEl","useRef","teamEl","onFilterChange","current","__reactRefs","inputEl","newTeamId","ref","teamName","MainPage","activeTab","setActiveTab","_useState3","_useState4","leagueYear","setLeagueYear","_useState5","_useState6","_useState7","_useState8","teamYear","setTeamYear","_range","reverse","pageContent","components_TabFilters","TabFilter","components_LeagueFilters","components_TeamFilters","tabber","labels","bottom","tabLink","iconIos","iconMd","text","onClick","tabLinkActive","id","leagueTab","tabActive","components_LeagueTab","teamTab","TeamTab","App","params","theme","touch","fastClicks","main","url","components_MainPage","fetchAndCacheDraftData","then","res","serverPicks","setItem","Framework7","use","Framework7React","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","league-filters-height","team-filters-height","search-filters-height","searchTab"],"mappings":"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","file":"static/js/main.287fecae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabFilter\":\"TabFilter_tabFilter__1WdDZ\",\"active\":\"TabFilter_active__WI48O\",\"list\":\"TabFilter_list__JIGlI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { useState, useEffect } from 'react';\r\nimport localforage from 'localforage';\r\nimport axios from 'axios';\r\n\r\nfunction useDraftPicks(year) {\r\n  const [draftPicks, setDraftPicks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDraftPicks = async () => {\r\n      try {\r\n        // Try to fetch draft picks from local IndexedDB first\r\n        let draftPicks = await localforage.getItem(year);\r\n        // If local picks arent there, try to load them from the server\r\n        if(!draftPicks) {\r\n          const result = await axios.get(`./data/${year}.json`);\r\n          draftPicks = result.data;\r\n        }\r\n        setDraftPicks(draftPicks);\r\n      } catch(err) {\r\n        console.log('Unable to load draft picks locally or from server');\r\n      }\r\n    };\r\n    if(year) {\r\n      fetchDraftPicks();\r\n    }\r\n  }, [year]);\r\n\r\n  return draftPicks;\r\n}\r\n\r\nexport default useDraftPicks;","function toOrdinal(n) {\r\n  const s = ['th','st','nd','rd'];\r\n  const v = n % 100;\r\n  return n+(s[(v-20)%10]||s[v]||s[0]);\r\n}\r\n\r\nexport {\r\n  toOrdinal\r\n};","import React from 'react';\r\nimport { List, ListGroup, ListItem } from 'framework7-react';\r\nimport useDraftPicks from '../hooks/useDraftPicks';\r\nimport _groupBy from 'lodash/groupBy';\r\nimport _map from 'lodash/map';\r\nimport { toOrdinal } from '../util';\r\nimport teams from '../util/teams.json';\r\n\r\nfunction LeagueTab({ year }) {\r\n  const draftPicks = useDraftPicks(year);\r\n\r\n  const byRound = _groupBy(draftPicks, 'round');\r\n  const listGroups = _map(byRound, function(players, key) {\r\n    const round = toOrdinal(key);\r\n    return (\r\n      <ListGroup mediaList key={key}>\r\n        <ListItem title={`${round} Round`} groupTitle></ListItem>\r\n        {players.map((player, i) => (\r\n          <ListItem title={player.name} subtitle={`${player.position} · ${teams[player.team]} · ${player.school}`} key={i}>\r\n            <div slot=\"media\">{player.pick}</div>\r\n          </ListItem>\r\n        ))}\r\n      </ListGroup>\r\n    )\r\n  });\r\n  return (\r\n    <List>\r\n      {listGroups}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default LeagueTab;","import React from 'react';\r\nimport { List, ListGroup, ListItem } from 'framework7-react';\r\nimport useDraftPicks from '../hooks/useDraftPicks';\r\nimport _groupBy from 'lodash/groupBy';\r\nimport _map from 'lodash/map';\r\nimport { toOrdinal } from '../util';\r\nimport teams from '../util/teams.json';\r\n\r\nfunction LeagueTab({ year, teamId }) {\r\n  const draftPicks = useDraftPicks(year);\r\n\r\n  const teamDraftPicks = draftPicks.filter(pick => pick.team === teamId);\r\n  const byRound = _groupBy(teamDraftPicks, 'round');\r\n  const listGroups = _map(byRound, function(players, key) {\r\n    const round = toOrdinal(key);\r\n    return (\r\n      <ListGroup mediaList key={key}>\r\n        <ListItem title={`${round} Round`} groupTitle></ListItem>\r\n        {players.map((player, i) => (\r\n          <ListItem title={player.name} subtitle={`${player.position} · ${teams[player.team]} · ${player.school}`} key={i}>\r\n            <div slot=\"media\">{player.pick}</div>\r\n          </ListItem>\r\n        ))}\r\n      </ListGroup>\r\n    )\r\n  });\r\n  return (\r\n    <List>\r\n      {listGroups}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default LeagueTab;","import React from 'react';\r\n\r\nfunction TabFilters({children}) {\r\n  return <>{children}</>;\r\n}\r\n\r\nexport default TabFilters;","import React from 'react';\r\nimport cn from 'classnames';\r\nimport styles from '../styles/TabFilter.module.css';\r\n\r\nfunction TabFilters({children, isActive}) {\r\n  const className = cn(styles.tabFilter, {\r\n    [styles.active]: isActive\r\n  });\r\n  return <div className={className}>{children}</div>;\r\n}\r\n\r\nexport default TabFilters;","import React from 'react';\r\nimport { List, ListInput } from 'framework7-react';\r\nimport tabFilterStyles from '../styles/TabFilter.module.css';\r\n\r\nfunction LeagueFilters({year, setYear, yearOptions}) {\r\n\r\n  function onChangeYear(e) {\r\n    const newYear = e.target.value;\r\n    setYear(newYear);\r\n  }\r\n\r\n  return (\r\n    <List inlineLabels={true} className={tabFilterStyles.list}>\r\n      <ListInput\r\n        label=\"Year\"\r\n        type=\"select\"\r\n        defaultValue={year}\r\n        placeholder=\"Please choose...\"\r\n        onInput={onChangeYear}\r\n      >\r\n      {yearOptions.map(year => (\r\n        <option value={year} key={year}>{year}</option>\r\n      ))}\r\n      </ListInput>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default LeagueFilters;","import React, { useRef } from 'react';\r\nimport { List, ListInput } from 'framework7-react';\r\nimport _map from 'lodash/map';\r\nimport teams from '../util/teams.json';\r\nimport tabFilterStyles from '../styles/TabFilter.module.css';\r\n\r\nfunction TeamFilters({year, teamId, setYear, setTeamId, yearOptions}) {\r\n  const yearEl = useRef(null);\r\n  const teamEl = useRef(null);\r\n\r\n  // Only call the set state functions if both year and team have been selected\r\n  function onFilterChange() {\r\n    const newYear = yearEl.current.__reactRefs.inputEl.value;\r\n    const newTeamId = teamEl.current.__reactRefs.inputEl.value;\r\n    if(newYear && newTeamId) {\r\n      setYear(newYear);\r\n      setTeamId(newTeamId);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <List inlineLabels={true} className={tabFilterStyles.list}>\r\n      <ListInput\r\n        label=\"Year\"\r\n        type=\"select\"\r\n        defaultValue={year}\r\n        onInput={onFilterChange}\r\n        ref={yearEl}\r\n      >\r\n        <option value=\"\">Select Year...</option>\r\n        {yearOptions.map(year => (\r\n          <option value={year} key={year}>{year}</option>\r\n        ))}\r\n      </ListInput>\r\n      <ListInput\r\n        label=\"Team\"\r\n        type=\"select\"\r\n        defaultValue={teamId}\r\n        onInput={onFilterChange}\r\n        ref={teamEl}\r\n      >\r\n        <option value=\"\">Select Team...</option>\r\n        {_map(teams, (teamName, teamId) => (\r\n          <option value={teamId} key={teamId}>{teamName}</option>\r\n        ))}\r\n      </ListInput>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default TeamFilters;","import React from 'react';\r\nimport { Searchbar } from 'framework7-react';\r\n\r\nfunction LeagueFilters() {\r\n  return (\r\n    <Searchbar\r\n      customSearch={true}\r\n      disableButton={false}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LeagueFilters;","import React, { useState } from 'react';\r\nimport { Page, Navbar, Toolbar, Link, Tabs, Tab } from 'framework7-react';\r\nimport cn from 'classnames';\r\nimport _range from 'lodash/range';\r\nimport LeagueTab from './LeagueTab';\r\nimport TeamTab from './TeamTab';\r\nimport EmptyTab from './EmptyTab';\r\nimport TabFilters from './TabFilters';\r\nimport TabFilter from './TabFilter';\r\nimport LeagueFilters from './LeagueFilters';\r\nimport TeamFilters from './TeamFilters';\r\nimport SearchFilters from './SearchFilters';\r\nimport styles from '../styles/MainPage.module.css';\r\n\r\nfunction MainPage() {\r\n  const [activeTab, setActiveTab] = useState('league');\r\n  const [leagueYear, setLeagueYear] = useState('2018');\r\n  const [teamId, setTeamId] = useState('');\r\n  const [teamYear, setTeamYear] = useState('');\r\n\r\n  const yearOptions = _range(2013, 2019).reverse();\r\n\r\n  return (\r\n    <Page pageContent={false}>\r\n      <Navbar title=\"NFL Drafts\"></Navbar>\r\n      <TabFilters>\r\n        <TabFilter isActive={activeTab === 'league'}>\r\n          <LeagueFilters \r\n            year={leagueYear} \r\n            setYear={setLeagueYear} \r\n            yearOptions={yearOptions}\r\n          />\r\n        </TabFilter>\r\n        <TabFilter isActive={activeTab === 'by-team'}>\r\n          <TeamFilters \r\n            year={teamYear} \r\n            teamId={teamId} \r\n            setYear={setTeamYear} \r\n            setTeamId={setTeamId} \r\n            yearOptions={yearOptions} \r\n          />\r\n        </TabFilter>\r\n        {/* <TabFilter isActive={activeTab === 'search'}>\r\n          <SearchFilters />\r\n        </TabFilter> */}\r\n      </TabFilters>\r\n      <Toolbar tabber labels bottom>\r\n        <Link \r\n          tabLink=\"#league\" \r\n          iconIos=\"f7:library\" \r\n          iconMd=\"material:list\" \r\n          text=\"League\" \r\n          onClick={() => setActiveTab('league')} \r\n          tabLinkActive\r\n        />\r\n        <Link \r\n          tabLink=\"#by-team\" \r\n          iconIos=\"f7:paw\" \r\n          iconMd=\"material:pets\" \r\n          text=\"By Team\" \r\n          onClick={() => setActiveTab('by-team')} \r\n        />\r\n        {/* <Link \r\n          tabLink=\"#search\" \r\n          iconIos=\"f7:search\" \r\n          iconMd=\"material:search\" \r\n          text=\"Search\" onClick={() => setActiveTab('search')} \r\n        />\r\n        <Link \r\n          tabLink=\"#settings\" \r\n          iconIos=\"f7:settings\" \r\n          iconMd=\"material:settings\" \r\n          text=\"Settings\" onClick={() => setActiveTab('settings')} \r\n        /> */}\r\n      </Toolbar>\r\n      <Tabs>\r\n        <Tab id=\"league\" className={cn('page-content', styles.leagueTab)} tabActive>\r\n          <LeagueTab year={leagueYear} />\r\n        </Tab>\r\n        <Tab id=\"by-team\" className={cn('page-content', styles.teamTab)}>\r\n          <TeamTab year={teamYear} teamId={teamId} />\r\n        </Tab>\r\n        {/* <Tab id=\"search\" className={cn('page-content', styles.searchTab)}>\r\n          <EmptyTab />\r\n        </Tab>\r\n        <Tab id=\"settings\" className=\"page-content\">\r\n          <EmptyTab />\r\n        </Tab> */}\r\n      </Tabs>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MainPage;","import React from 'react';\nimport { F7App, Statusbar, View } from 'framework7-react';\nimport MainPage from './MainPage';\n\nfunction App() {\n  const f7params = {\n    name: 'NFL Drafts',\n    id: 'com.collier.nfldrafts',\n    theme: 'auto',\n    touch: {\n      fastClicks: true\n    }\n  };\n\n  return (\n    <F7App params={f7params}>\n      <Statusbar />\n      <View main url=\"/\">\n        <MainPage />\n      </View>\n    </F7App>\n  );\n}\n\nexport default App;\n  \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Framework7 from 'framework7/framework7.esm.bundle.js';\nimport Framework7React from 'framework7-react';\nimport axios from 'axios';\nimport localforage from 'localforage';\nimport * as serviceWorker from './serviceWorker';\nimport 'framework7/css/framework7.bundle.css';\nimport 'framework7-icons';\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './styles/index.css';\n\nFramework7.use(Framework7React);\n// eslint-disable-next-line import/first\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// Asyncronously load the draft data in the background and cache it using \n// localforage\nfunction fetchAndCacheDraftData(year) {\n  axios.get(`./data/${year}.json`).then(res => {\n    const serverPicks = res.data;\n    localforage.setItem(year, serverPicks);\n  });\n}\nfor(let year = 2013; year <= 2018; year++) {\n  fetchAndCacheDraftData(year+'');\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"league-filters-height\":\"44px\",\"team-filters-height\":\"88px\",\"search-filters-height\":\"44px\",\"leagueTab\":\"MainPage_leagueTab__22Aj8\",\"teamTab\":\"MainPage_teamTab__3LTSL\",\"searchTab\":\"MainPage_searchTab__3YL3-\"};"],"sourceRoot":""}